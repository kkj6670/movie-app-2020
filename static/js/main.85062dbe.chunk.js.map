{"version":3,"sources":["StateApp/StateApp.js","MovieApp/Movie.js","App.js","index.js"],"names":["React","Component","Movie","id","year","title","summary","poster","genres","fullSummary","slice","length","maxLen","className","data-id","src","alt","map","genre","index","key","App","state","isLoading","movies","getMovies","a","Axios","get","data","console","log","setState","this","movie","medium_cover_image","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVAEuBA,IAAMC,U,sBCkCdC,MAhCf,YAA2D,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAExCC,EAAcH,EAAQI,MAAM,EADnB,KAGf,OADAJ,EAAWG,EAAYE,QAFR,IAE2BL,EAAQI,MAAM,EAAEE,KAAU,QAAUH,EAE1E,wBAAII,UAAU,aAAaC,UAASX,GAChC,yBAAKU,UAAU,aACX,yBAAKE,IAAKR,EAAQS,IAAKX,EAAOA,MAAOA,KAEzC,yBAAKQ,UAAU,aACX,wBAAIA,UAAU,mBAAmBR,GACjC,uBAAGQ,UAAU,kBAAkBT,GAC/B,wBAAIS,UAAU,gBACTL,EAAOS,KAAI,SAACC,EAAOC,GAAR,OACR,wBAAIC,IAAKD,EAAON,UAAU,sBAAsBK,OAGxD,wBAAIL,UAAU,qBAAqBP,MCuCpCe,E,4MArDbC,MAAQ,CACNC,WAAY,EACZC,OAAS,I,EAKXC,U,sBAAY,8BAAAC,EAAA,sEAKEC,IAAMC,IAAI,4DALZ,gBAGKJ,EAHL,EAENK,KACEA,KAASL,OAIbM,QAAQC,IAAIP,GACZ,EAAKQ,SAAS,CAACR,SAAQD,WAAW,IAR1B,2C,kEAYVO,QAAQC,IAAI,gDACZE,KAAKR,c,+BAGG,IAAD,EACuBQ,KAAKX,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASX,UAAU,iBACjB,wBAAIA,UAAU,kBACbU,EACG,wBAAIV,UAAU,cACZ,0BAAMA,UAAU,eAAhB,eAEFW,EAAOP,KAAI,SAAAiB,GACX,OACI,kBAAC,EAAD,CACEd,IAAKc,EAAM/B,GACXA,GAAI+B,EAAM/B,GACVC,KAAM8B,EAAM9B,KACZC,MAAO6B,EAAM7B,MACbC,QAAS4B,EAAM5B,QACfC,OAAQ2B,EAAMC,mBACd3B,OAAQ0B,EAAM1B,kB,GA1CdR,IAAMC,W,YCAxBmC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.85062dbe.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass StateApp extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        console.log(\"생성\");\r\n    }\r\n    \r\n\r\n    state = {\r\n        count : 0\r\n    }\r\n\r\n    add = () => {\r\n        this.setState(curr=>({count: curr.count + 1}));\r\n    }\r\n\r\n    minus = () => {\r\n        this.setState(curr=>({count: curr.count - 1}));\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"컴포넌트 마운트!!!\");\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"컴포넌트 업데이트!!!\");\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        console.log(\"컴포넌트 언마운트!!!\");\r\n    }\r\n\r\n    render(){\r\n        console.log(\"렌더링\");\r\n        return (\r\n            <div>\r\n                <h1>Num = {this.state.count}</h1>\r\n                <button type=\"button\" onClick={this.add}>+</button>\r\n                <button type=\"button\" onClick={this.minus}>-</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StateApp;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./movie.css\";\r\n\r\nfunction Movie({id, year, title, summary, poster, genres}){\r\n    const maxLen = 290;\r\n    const fullSummary = summary.slice(0,maxLen);\r\n    summary =  fullSummary.length >= maxLen ? summary.slice(0,maxLen-5)+\".....\" : fullSummary;\r\n    return(\r\n        <li className=\"movie-list\" data-id={id}>\r\n            <div className=\"movie-img\">\r\n                <img src={poster} alt={title} title={title}/>\r\n            </div>\r\n            <div className=\"movie-txt\">\r\n                <h3 className=\"movie-txt-title\">{title}</h3>\r\n                <p className=\"movie-txt-year\">{year}</p>\r\n                <ul className=\"movie-genres\">\r\n                    {genres.map((genre, index) => (\r\n                        <li key={index} className=\"movie-genres-genre\">{genre}</li>\r\n                    ))}\r\n                </ul>\r\n                <h4 className=\"movie-txt-summary\">{summary}</h4>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport './App.css';\r\nimport StateApp from './StateApp/StateApp';\r\nimport Axios from 'axios';\r\nimport Movie from './MovieApp/Movie';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    isLoading : true,\r\n    movies : [\r\n\r\n    ]\r\n  };\r\n\r\n  getMovies = async () => {\r\n      const {\r\n        data : {\r\n          data : { movies }\r\n        }\r\n      } = await Axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n\r\n      console.log(movies);\r\n      this.setState({movies, isLoading: false});\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(\"컴포넌트 마운트!\");\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return(\r\n      <section className=\"section movie\">\r\n        <ul className=\"movie-list-box\">\r\n        {isLoading\r\n          ? <li className=\"loader-box\">\r\n              <span className=\"loader-text\">Loading...</span>\r\n            </li>\r\n          : movies.map(movie => {\r\n            return (\r\n                <Movie\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  year={movie.year}\r\n                  title={movie.title}\r\n                  summary={movie.summary}\r\n                  poster={movie.medium_cover_image}\r\n                  genres={movie.genres}\r\n                />\r\n            )\r\n          })}\r\n        </ul>\r\n      </section>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"./default.css\";\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}